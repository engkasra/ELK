version: "3.3"

services:
   setup:
     image: repo.asax.ir/asa/bi/tools/elasticsaerch:${STACK_VERSION}
     volumes:
       - /data/elastic-data:/usr/share/elasticsearch/data
       - /data/elastic-certs:/usr/share/elasticsearch/config/certs
       - /etc/localtime:/etc/localtime:ro
       - /etc/timezone:/etc/timezone:ro
     user: "0"
     command: >
       bash -c '
         if [ x${ELASTIC_PASSWORD} == x ]; then
           echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
           exit 1;
         elif [ x${KIBANA_PASSWORD} == x ]; then
           echo "Set the KIBANA_PASSWORD environment variable in the .env file";
           exit 1;
         fi;
         if [ ! -f config/certs/ca.zip ]; then
           echo "Creating CA";
           bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
           unzip config/certs/ca.zip -d config/certs;
         fi;
         if [ ! -f config/certs/certs.zip ]; then
            echo "Creating certs";
            echo -ne \
            "instances:\n"\
            "  - name: es01\n"\
            "    dns:\n"\
            "      - es01\n"\
            "      - localhost\n"\
            "    ip:\n"\
            "      - 127.0.0.1\n"\
            "  - name: kibana\n"\
            "    dns:\n"\
            "      - kibana\n"\
            "      - localhost\n"\
            "    ip:\n"\
            "      - 127.0.0.1\n"\
            > config/certs/instances.yml;
            echo "Content of instances.yml:";
            cat config/certs/instances.yml;
            echo "Running elasticsearch-certutil command...";
            bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
            echo "done by mehdi"
            echo "Unzipping certs.zip...";
            unzip -o config/certs/certs.zip -d config/certs;
            echo "Script execution completed.";
         fi;
         echo "Setting file permissions"
         chown -R root:root config/certs;
         find . -type d -exec chmod 750 \{\} \;;
         find . -type f -exec chmod 640 \{\} \;;
         echo "Waiting for Elasticsearch availability";
         until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
         echo "Setting kibana_system password";
         until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
         echo "All done!";
       '
     healthcheck:
       test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
       interval: 1s
       timeout: 5s
       retries: 120
     networks:
       - elastic
   es01:
    depends_on:
      setup:
        condition: service_healthy
    image: repo.asax.ir/asa/bi/tools/elasticsaerch:${STACK_VERSION}
    volumes:
      - /data/elastic-certs:/usr/share/elasticsearch/config/certs
      - /data/elastic-data:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - ${ES_PORT}:9200
      - 9300:9300
    extra_hosts:
      - "es01.stdc.local:172.20.29.26"
      - "es02.stdc.local:172.20.29.27"
      - "es03.stdc.local:172.20.29.28"
    environment:
      - node.name=es01
      - cluster.name=elk-cluster
      - node.roles=master,data
      - cluster.initial_master_nodes=172.20.29.26
      - discovery.seed_hosts=172.20.29.27,172.20.29.28
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enrollment.enabled=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - http.cors.allow-origin="*"
      - http.cors.enabled=true
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE
      - network.publish_host=172.20.29.26
      - http.publish_host=172.20.29.26
      - transport.publish_host=172.20.29.26
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic

   kibana:
     depends_on:
       es01:
         condition: service_healthy
     image: repo.asax.ir/library/kibana:${STACK_VERSION}
     volumes:
       - /data/elastic-certs:/usr/share/kibana/config/certs
       - /data/kibana-data:/usr/share/kibana/data
     ports:
       - ${KIBANA_PORT}:5601
     environment:
       - ELASTICSEARCH_URL=https://es01:19200
       - ELASTICSEARCH_HOSTS=["https://es01:19200","https://es02:19200","https://es03:19200"]
       - ELASTICSEARCH_USERNAME=kibana_system
       - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
       - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt
       - SERVER_SSL_ENABLED=true
       - SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana/kibana.key
       - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana/kibana.crt
       - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
     healthcheck:
       test:
         [
           "CMD-SHELL",
           "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
         ]
       interval: 10s
       timeout: 10s
       retries: 120
     networks:
       - elastic

networks:
  elastic:
    driver: bridge

volumes:
  elastic-data:
  elastic-certs:
  kibana-data: